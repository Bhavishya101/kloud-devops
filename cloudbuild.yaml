options:
  logging: CLOUD_LOGGING_ONLY

steps:

# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image', '.']

# Push the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image']

#Deploy the container Image
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - run
  - --filename=deployment.yaml
  - --image=us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image
  - --location=us-central1-c
  - --cluster=devops-playground
  - --namespace=kloud-ns


# # Authenticate kubectl - Get credentials for GKE cluster
# - name: 'gcr.io/cloud-builders/gcloud'
#   entrypoint: 'bash'
#   args:
#   - '-c'
#   - |
#     gcloud container clusters get-credentials devops-playground --zone us-central1-c
#     kubectl config use-context gke_${PROJECT_ID}_us-central1-c_devops-playground
#     kubectl create ns kloud-ns

# # #Set the Kubernetes cluster context
# # - name: 'gcr.io/cloud-builders/kubectl'
# #   args:
# #     - 'config'
# #     - 'use-context'
# #     - 'gke_us-central1-c_devops-playground'

# # Use kubectl for all subsequent Kubernetes operations, each in its own step
# - name: 'gcr.io/cloud-builders/kubectl'
#   args: ['create', 'namespace', 'kloud-ns']

# - name: 'gcr.io/cloud-builders/kubectl'
#   args: ['apply', '-f', 'deployment.yaml', '-n', 'kloud-ns']

# images:
#   - 'us-central1-docker.pkg.dev/${PROJECT_ID}/my-docker-repo/my-image' 





